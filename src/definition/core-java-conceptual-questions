Please answer the below core-java Questions:

Q. What is programing language?
A1. A programming language is a formal language comprising a set of instructions that produce various kinds of output.
 Programming languages are used in computer programming to implement algorithms.
 Most programming languages consist of instructions for computers


 A2. A programming language is a vocabulary and set of grammatical rules for instructing a computer or computing device
 to perform specific tasks. The term programming language usually refers to high-level languages,
  such as BASIC, C, C++, COBOL, Java, FORTRAN, Ada, and Pascal.




Q. What jdk contains or composed of and define each components?
A. components of JDK :
   The Runtime Interpreter
   The Compiler
   The Applet Viewer
   The Debugger
   The Class File Disassembler
   The Header and Stub File Generator
   The Documentation Generator
   Applet Demos
   API Source Code





Q. What is IDE?
A. IDE, (Integrated Development Environment), is a software application that combines all
of the features and tools needed by a software developer.



Q. What are the IDEs available in the market to support java?
A.  BlueJ
    Codenvy
    DrJava
    Eclipse
    Greenfoot
    IntelliJ IDEA
    JCreator
    (Oracle) JDeveloper
    jGRASP
    MyEclipse
    NetBeans
    RAD for WebSphere Software (Rational Application Developer)
    Xcode



Q. Explain the entire java life cycle.
A. Life cycle of a java program tells us what happens right from the point when we type source code in a text editor,
 to the point that source code is converted into machine code (0’s and 1’s).

There are three main stages in the life cycle of a java program :

- Editing the program
- Compiling the source code
- Executing the byte code
/ First, you will start with typing the program in a text-editor (ex: notepad, notepad++, wordpad, textedit etc).
 After completing editing of the program, we have to save the file.
 While saving the file you should remember that the file must be saved with .
 java extension. For example, let’s think that I had written a Java program which contains a single class Sample (more on classes in future posts).
  It is a good convention to save the file with the name of the class. So, as per my example, the file will be saved as Sample.java.

/Second step is compilation. The name of the Java compiler is javac.
The input to the compiler is Java source code which is available in Sample.java.
The output of the compiler is machine independent or platform independent code which is known as bytecode.
The file which is generated after compilation is .class file. As per my example, the bytecode file will be Sample.class.

/Last step is execution. The bytecode generated by the compiler will be executed by Java Virtual Machine (JVM).
 Input to the JVM is bytecode and output is machine code (0’s and 1’s) which will be executed by the CPU of the local machine.


Q/what is class?
A. A class is the blueprint from which individual objects are created.

Q/What is object?
An object is a real-world entity.
An object is a runtime entity.
The object is an entity which has state and behavior.
The object is an instance of a class.


Q/What is the entry point of an application?
A. An application entry point identifies a resource that is an access point to an application (main method).
Application entry points are used to control users' access to different versions of an application that is deployed on a platform.
They are also used to create an application context to monitor the resource usage for applications and to identify an application being run.

Q/ Why main is static?
A. Java main method is always static, so that compiler can call it without the creation of an object or before the creation of an object of the class.
 In any Java program, the main method is the starting point from where compiler starts program execution. So, the compiler needs to call the main method.

Q/ Which class is the superclass of all classes?
A. Object is the super class of all other classes.

Q/ What is difference between path and classpath variables?
A. Path is an environment variable which is used by the operating system to find the executables.
Classpath is an environment variable which is used by the Java compiler to find the path, of classes.

Q/ What is the difference between an Interface and Abstract class?
A. Main difference is methods of a Java interface are implicitly abstract and cannot have implementations.
A Java abstract class can have instance methods that implements a default behavior.
An abstract class may contain non-final variables. Members of a Java interface are public by default.

Q/ Can you make an Object from an Interface and Abstract class ? if not how do you use it ?
A. You cannot create an object of abstract class or interface since they are incomplete class.
you can use it by implementing a subclass of abstract class which, of course, must not be abstract.


Q/ what is Access Specifier?
A. access specifier is these modifier that is used to restrict the visibility/accessibility of classes, fields,
methods,or constructors.


Q/ What is OOP ? Define each feature of java OOP.
A. OOP, Java's Object Oriented Programming.
They are an abstraction, encapsulation, inheritance, and polymorphism.
Java OOP concepts let us create working methods and variables, then re-use all or part of them without compromising security.

Q/ What is Java Package and which package is imported by default?
A. A Java package organizes Java classes into namespaces, providing a unique namespace for each type it contains.
java. lang is the package available by default in the java platforms


Q/ What is API? Name list of API that you have used so far.
A. API is the acronym for Application Programming Interface, which is a software intermediary that allows
two applications to talk to each other.


Q/ Does java support multiple inheritance, explain why or why not?
A. java does not support multiple inheritances through classes but through the interfaces, we can use multiple inheritances.
No java doesn't support multiple inheritance directly because it leads to overriding of methods when both extended class have a same method name.

Q/ What is method overloading and when it happens?
A. Method Overloading is a feature that allows a class to have more than one method having the same name, if their argument lists are different.
It is similar to constructor overloading in Java, that allows a class to have more than one constructor having different argument lists.


Q/ Explain exceptions in java and how to handle it.
A. An Exception is an unwanted event that interrupts the normal flow of the program. When an exception occurs program execution gets terminated.
In such cases we get a system generated error message.
Java exception handling is managed via five keywords: try, catch, throw, throws, and finally.


Q/ What is static keyword in java? How it has been used in variables and methods ?
A. static keyword is mainly used for memory management.
It can be used with variables, methods, blocks and nested classes.
It is a keyword which is used to share the same variable or method of a given class.
static is used for a constant variable or a method that is same for every instance of a class.


Q/ What is final and how it has been used variables and methods?
A. final is a non-access modifier applicable only to a variable, a method or a class.
When a variable is declared with final keyword, its value can't be modified, essentially, a constant. This also means that you must initialize a final variable.

Q/ What is final, finally and finalize?
A. Final class can't be inherited, final method can't be overridden and final variable value can't be changed.
Finally is used to place important code, it will be executed whether exception is handled or not.
Finalize is used to perform clean up processing just before object is garbage collected. 2) Final is a keyword.

Q/ What is a constructor ?
A. In OOP, a constructor is a special type of subroutine called to create an object.
It prepares the new object for use, often accepting arguments that the constructor uses to set required member variables.

Q/ Can we have multiple constructors in a class?
A. A class can have multiple constructors, as long as their signature (the parameters they take) are not the same.


Q/ If we don't have a constructor declared, what is called during the object creation?
A. instantiating

Q/ What is "this" keyword in java ?
A. Keyword 'THIS' in Java is a reference variable that refers to the current object. It can be used to refer current class instance variable.
It can be used to invoke or initiate current class constructor. It can be passed as an argument in the method call.

Q/ What is "super" keyword in java? How many possible way can you use?
A. super can be used to refer immediate parent class instance variable. super can be used to invoke immediate parent class method.
super can be used to invoke immediate parent class constructor.


Q/ What is JVM stand for ?
A. A Java virtual machine (JVM) is a virtual machine that enables a computer to run Java programs as well as programs written
in other languages that are also compiled to Java bytecode.

Q/ Is JVM platform independent?
A. JVM is platform-dependent. Every system has its own JVM

Q/ What version of java are you using?
A. openjdk version "14.0.1" 2020-04-14 (from my mac terminal).


Q/ What is JAR stand for ?
A. JAR stands for Java ARchive. It's a file format based on the popular ZIP file format and is used for aggregating many files into one.


Q/ What is the difference between JDK and JVM?
A. JDK is a software development kit whereas JRE is a software bundle that allows Java program to run, whereas JVM is an environment for executing bytecode.

Q/ What is the difference between JVM and JRE?
A. JRE is the container, JVM is the content. Java Runtime Environment contains JVM, class libraries, and other supporting files.


Q/ What is compile time and run time?
A. Compile-time and Runtime are the two programming terms used in the software development.
Compile-time is the time at which the source code is converted into an executable code while the run time is the time at which the executable code is started running.


Q/ What is heap?
A. heap is the amount of memory allocated to applications running in the JVM.


Q/ How java manage it's memory?
A. In Java, memory management is the process of allocation and de-allocation of objects, called Memory management.
Java does memory management automatically. Java uses an automatic memory management system called a garbage collector.


Q/ What is the difference between String, StringBuffer and StringBuilder?
A. Difference between String,StringBuffer and StringBuilder is :
The String class is an immutable class whereas StringBuffer and StringBuilder classes are mutable.


Q/ What is Singleton class?
A. the singleton pattern is a software design pattern that restricts the instantiation of a class to one "single" instance.
This is useful when exactly one object is needed to coordinate actions across the system.

Q/ What is Serialization and Deserialization?
A. Serialization is a mechanism of converting the state of an object into a byte stream.
Deserialization is the reverse process where the byte stream is used to recreate the actual Java object in memory.
This mechanism is used to persist the object.

Q/ when to use transient variable in java?
A. transient keyword is used on class attributes/variables to indicate that serialization process of such class
should ignore such variables while creating a persistent byte stream for any instance of that class.

Q/ Difference between while and do..while loop?
A. the While loop executes the code block only if the condition is True. In Do While loop, the condition is tested at the end of the loop.
So, the Do While executes the statements in the code block at least once even if the condition Fails.

Q/ What is Enum?
A. An enum is a special "class" that represents a group of constants (unchangeable variables, like final variables).


Q/ What is Iterator?
A. An Iterator is an object that can be used to loop through collections, like ArrayList and HashSet.
It is called an "iterator" because "iterating" is the technical term for looping.


Q/ Which one will take more memory, an int or Integer?
A. int is a primitive data type which takes 32 bits(4 bytes) to store. Integer is an object which takes 128 bits (16 bytes) to store int value.


Q/ Why is String Immutable in Java?
A. The string is Immutable in Java because String objects are cached in String pool.

Q/ What is constructor chaining in Java?
A. A constructor in Java is a special method that is used to initialize objects.
The constructor is called when an object of a class is created.


Q/ The difference between Serial and Parallel Garbage Collector?
A. serial collector is a default copying collector which uses only one GC thread for the GC operation.
parallel collector uses multiple GC threads for the GC operation.


Q/ What is JIT stands for?
A. The Just-In-Time (JIT) compiler is a component of the runtime environment that improves the performance of Java™ applications
by compiling bytecodes to native machine code at run time.


Q/ Explain Java Heap space and Garbage collection?
A. The heap is created when the JVM starts up and may increase or decrease in size while the application runs.
When the heap becomes full, garbage is collected. During the garbage collection objects that are no longer
used are cleared, thus making space for new objects.


Q/ Can you guarantee the garbage collection process?
A. It is possible to include a hint in the code to run the garbage collector with the System.
or Runtime. methods, but they provide no guarantee that the garbage collector will actually run.
The best approach to tuning Java garbage collection is setting flags on the JVM.


Q/ What is the difference between stack and heap in Java?
A. Heap is used throughout the application, but Stack is only used for the method currently running.
The Heap Space contains all objects are created, but Stack contains any reference to those objects.
Objects stored in the Heap can be accessed throughout the application.


Q/ What is reflection in java and why is it useful?
A. Search Results
Featured snippet from the web
Java Reflection makes it possible to inspect classes, interfaces, fields and methods at runtime, without knowing the names of the classes, methods etc.
at compile time. It is also possible to instantiate new objects, invoke methods and get/set field values using reflection.


Q/ what is multithreading in java?
A. Multithreading in Java is a process of executing multiple threads simultaneously.

Q/ What is the use of synchronization in Java?
A. Synchronized keyword in Java is used to provide mutually exclusive access to a shared resource with multiple threads in Java.
Synchronization in Java guarantees that no two threads can execute a synchronized method which requires the same lock simultaneously or concurrently.

Q/ What is Framework?
A. framework in java is body of prewritten code used by developers to create apps using the Java programming language.


Q/ What are the testing Framework available in java?
A.
Selenium
JUnit
Jasmine
JBehave
Serenity
TestNG
QUnit
Cucumber
Mocha
REST Assured
Mockito


Q/ Difference between jUnit and testNG?
A. Both testNG and Junit are Testing framework used for Unit Testing. TestNG is similar to JUnit.
Few more functionalities are added to it that makes TestNG more powerful than JUnit.
in jUnit we hav to declare BeforeClass and AfterClass as a static method,
TestNG, there are no such constraints for using the static method.
dependency test features supported by testNG but not jUnit.

Q/ What are the dependencies for this project?


Q/ what is dependency injection in java?
A. Dependency injection (DI) is the concept in which objects get other required objects from outside.

Q/ What is static binding and dynamic binding?
A. If linking between method call and method implementation is resolved at compile time then we call it static binding,
If it is resolved at run time then it dynamic binding.